/**
 * `InternalOAuthError` error.
 *
 * InternalOAuthError wraps errors generated by node-oauth.  By wrapping these
 * objects, error messages can be formatted in a manner that aids in debugging
 * OAuth issues.
 *
 * @constructor
 * @param {String} [message]
 * @param {Object|Error} [err]
 * @api public
 */
class InternalOAuthError extends Error {
  constructor(message, oauthError) {
    super(message);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, InternalOAuthError);
    }
    this.oauthError = oauthError;
    this.name = 'InternalOAuthError';
  }

  toString() {
    let m = this.name;
    if (this.message) { m += `: ${this.message}`; }
    if (this.oauthError) {
      if (this.oauthError instanceof Error) {
        m = this.oauthError.toString();
      } else if (this.oauthError.statusCode && this.oauthError.data) {
        m += ` (status: ${this.oauthError.statusCode} data: ${this.oauthError.data})`;
      }
    }
    return m;
  }
}

module.exports = InternalOAuthError;
